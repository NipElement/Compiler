int main(){
  int a[10];
  int len;
  int i;
  i=0;
  scanf("%d",&len);
  while(i<len){
    scanf("%d",&a[i]);
    i=i+1;
  }
  quick_sort(a,len);

  i=0;
  while(i<len){
    printf("%d ",a[i]);
    i=i+1;
  }
  
  printf("\n");
  return 0;
}


void quick_sort(int arr[], int len) {
    quick_sort_recursive(arr, 0, len - 1);
}

void quick_sort_recursive(int arr[], int start, int end) {
    if (start >= end){
        
    }else{
        int mid;
        mid = arr[end];
        int left;
        left = start;
        int right;
        right = end - 1;
        while (left < right) {
            while (arr[left] < mid && left < right){
                left = left+1;
            }

            while (arr[right] >= mid && left < right){
                 right = right-1;
            }

            swap(arr+left, arr+right);
        }
        if (arr[left] >= arr[end]){
          swap(arr+left, arr+end);
        }
        else{
          left = left + 1;
        }
        if (left) {
            quick_sort_recursive(arr, start, left - 1);
        }
        quick_sort_recursive(arr, left + 1, end);
    }
    
}


void swap(int x[], int y[]) {
    int t;
    t = x[0];
    x[0] = y[0];
    y[0] = t;
}